apply plugin: 'com.android.library'
apply plugin: 'net.grandcentrix.gradle.publish'

android {
    compileSdkVersion COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.txt'
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

configurations {
    lintChecks
}

dependencies {
    compileOnly "com.android.support:appcompat-v7:$supportLibraryVersion"

    testCompileOnly "com.android.support:support-annotations:$supportLibraryVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    androidTestImplementation "com.android.support.test:runner:$supportTestVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"

    lintChecks project(path: ":thirtyinch-lint", configuration: "lintChecks")
}

task copyLintJar(type: Copy) {
    from(configurations.lintChecks) {
        rename { String fileName -> 'lint.jar' }
    }
    into 'build/intermediates/lint/'
}


project.afterEvaluate {
    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
    compileLintTask.dependsOn(copyLintJar)
}
